diff --git a/model_optimizer_pkg/model_optimizer_pkg/constants.py b/model_optimizer_pkg/model_optimizer_pkg/constants.py
index 3c7db1f..be75f9e 100644
--- a/model_optimizer_pkg/model_optimizer_pkg/constants.py
+++ b/model_optimizer_pkg/model_optimizer_pkg/constants.py
@@ -24,9 +24,8 @@ MODEL_OPTIMIZER_SERVER_SERVICE_NAME = "model_optimizer_server"
 
 # Static variables
 # Path where the Intel OpenVino is installed.
-INTEL_PATH = os.environ["INTEL_CVSDK_DIR"] + "/deployment_tools/model_optimizer/"
-
-PYTHON_BIN = "python3"
+# INTEL_PATH = os.environ["INTEL_CVSDK_DIR"] + "/deployment_tools/model_optimizer/"
+# PYTHON_BIN = "python3"
 
 # Max retry count
 MAX_OPTIMIZER_RETRY_COUNT = 1
@@ -103,9 +102,9 @@ class MOKeys(object):
     """
     MODEL_PATH = "--input_model"
     MODEL_NAME = "--model_name"
-    DATA_TYPE = "--data_type"
-    DISABLE_FUSE = "--disable_fusing"
-    DISABLE_GFUSE = "--disable_gfusing"
+    DATA_TYPE = ""		# Blocked
+    DISABLE_FUSE = ""		# Blocked
+    DISABLE_GFUSE = ""		# Blocked
     REV_CHANNELS = "--reverse_input_channels"
     OUT_DIR = "--output_dir"
     INPUT_SHAPE = "--input_shape"
diff --git a/model_optimizer_pkg/model_optimizer_pkg/model_optimizer_node.py b/model_optimizer_pkg/model_optimizer_pkg/model_optimizer_node.py
index 6db49ac..c8f4eaa 100644
--- a/model_optimizer_pkg/model_optimizer_pkg/model_optimizer_node.py
+++ b/model_optimizer_pkg/model_optimizer_pkg/model_optimizer_node.py
@@ -171,7 +171,7 @@ class ModelOptimizerNode(Node):
                                                                        input_width,
                                                                        value))
             elif flag is constants.APIFlags.PRECISION:
-                common_params[constants.MOKeys.DATA_TYPE] = value
+                common_params[constants.MOKeys.DATA_TYPE] = ""  # Prevent data type
             elif flag is constants.APIFlags.FUSE:
                 if value is not constants.APIDefaults.FUSE:
                     common_params[constants.MOKeys.DISABLE_FUSE] = ""
@@ -249,7 +249,7 @@ class ModelOptimizerNode(Node):
                                    f"{common_params[constants.MOKeys.MODEL_NAME]}.xml")
             
 
-        cmd = f"{constants.PYTHON_BIN} {constants.INTEL_PATH}{mo_path}"
+        cmd = f"{mo_path}"
         # Construct the cli command
         for flag, value in dict(common_params, **platform_parms).items():
             cmd += f" {flag} {value}"
@@ -341,7 +341,7 @@ class ModelOptimizerNode(Node):
                      "--tensorflow_use_custom_operations_config": ""}
         # Add the correct file suffix.
         common_params[constants.MOKeys.MODEL_PATH] += ".pbtxt" if "--input_model_is_text" in aux_inputs else ".pb"
-        return self.run_optimizer("mo_tf.py", common_params,
+        return self.run_optimizer("mo", common_params,
                                   self.set_platform_param(tf_params, aux_inputs))
 
 
